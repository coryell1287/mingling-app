on:
  workflow_run:
    workflows: ['Cypress Tests']
    types:
      - completed
  push:
    branches:
      - staging

name: Deploy to Amazon ECS

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: staging

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Wait for AWS configuration
      uses: lewagon/wait-on-check-action@v0.2
      with:
          ref: ${{ on.push.branches }}
          check-name: 'Login to Amazon ECR'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Wait for image to build and push
      uses: lewagon/wait-on-check-action@v0.2
      with:
          ref: ${{ on.push.branches }} 
          check-name: 'Build, tag, and push image to Amazon ECR'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: $ECR_REPOSITORY
        image: ${{ steps.build-image.outputs.image }}

    - name: Wait for new image ID in task definition
      uses: lewagon/wait-on-check-action@v0.2
      with:
          ref: ${{ on.push.branches }} 
          check-name: 'Fill in the new image ID in the Amazon ECS task definition'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${ECR_REPOSITORY}-service
        cluster: default
        wait-for-service-stability: true
