jobs:
  test:
    executor:
      name: node/default
      tag: '14.15'
    steps:
      - checkout
      - run:
          name: "Install packages"
          command: |
            npm ci
      - run:
          name: "Run all inspections"
          command: |
            npm run inspect:all:ci
      - run:
          name: "Check bundle size"
          command: |
            npm run build
      - run:
          name: "Run test coverage"
          command: |
              npm run test:coverage
      - store_artifacts:
          path: ./licenses
      - store_artifacts:
          path: ./bundleAnalyzer
      - store_artifacts:
          path: ./coverage

aws_job_template: &aws_job_template
  account-url: AWS_ECR_ACCOUNT_URL
  aws-access-key-id: AWS_ACCESS_KEY_ID
  aws-secret-access-key: AWS_SECRET_ACCESS_KEY
  dockerfile: Dockerfile
  no-output-timeout: 20m
  workspace-root: '.'
  region: AWS_REGION
  repo: $AWS_RESOURCE_NAME_PREFIX
  create-repo: true
  path: '.'
  skip-when-tags-exist: false
  attach-workspace: true
  tag: $CIRCLE_BUILD_NUM

service_template: &service_template
  family: ${AWS_RESOURCE_NAME_PREFIX}-task
  cluster-name: ${AWS_RESOURCE_NAME_PREFIX}-cluster
  service-name: ${AWS_RESOURCE_NAME_PREFIX}-service
  container-image-name-updates: container=${AWS_RESOURCE_NAME_PREFIX},tag=${CIRCLE_BUILD_NUM}

orbs:
  node: circleci/node@4.1.0
  aws-ecr: circleci/aws-ecr@6.15.3
  aws-ecs: circleci/aws-ecs@2.1.0
  cypress: cypress-io/cypress@1.16.1
version: 2.1
workflows:
  staging_deploy:
    jobs:
      - test:
          context: staging
          filters:
            branches:
              only: staging
      # -  cypress/run:
      #     filters:
      #       branches:
      #         only: staging
      #     no-workspace: false
      #     record: true
      #     start: 'npm start'
      #     command: 'npm run test:features:all'
      #     post-steps:
      #       - store_test_results:
      #           path: cypress/videos
      - aws-ecr/build-and-push-image:
          context: staging
          filters:
            branches:
              only: staging
          requires:
            - test
            # - cypress/run
          <<: *aws_job_template
      - aws-ecs/deploy-service-update:
          context: staging
          filters:
            branches:
              only: staging
          requires:
            - aws-ecr/build-and-push-image
          <<: *service_template

  uat_deploy:
    jobs:
      - test:
          context: uat
          filters:
            branches:
              only: uat
      -  cypress/run:
          filters:
            branches:
              only: uat
          no-workspace: false
          record: true
          start: 'npm start'
          command: 'npm run test:features:all'
          post-steps:
            - store_test_results:
                path: cypress/videos
      - aws-ecr/build-and-push-image:
          context: uat
          filters:
            branches:
              only: uat
          requires:
            - test
            - cypress/run
          <<: *aws_job_template
      - aws-ecs/deploy-service-update:
          context: uat
          filters:
           branches:
             only: uat
          requires:
              - aws-ecr/build-and-push-image
          <<: *service_template

  production_deploy:
    jobs:
      - request-approval:
          type: approval
          filters:
            branches:
              only: master
          requires:
            - aws-ecr/build-and-push-image
      - test:
          context: production
          filters:
            branches:
              only: master
      -  cypress/run:
          filters:
            branches:
              only: master
          no-workspace: false
          record: true
          start: 'npm start'
          command: 'npm run test:features:all'
          post-steps:
            - store_test_results:
                path: cypress/videos
      - aws-ecr/build-and-push-image:
          context: production
          filters:
            branches:
              only: master
          requires:
            - test
            - cypress/run
          <<: *aws_job_template
      - aws-ecs/deploy-service-update:
            context: production
            filters:
                 branches:
                  only: master
            requires:
              - request-approval
            <<: *service_template
